{"remainingRequest":"C:\\Users\\ASUS\\Desktop\\Blog-project\\blog-app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ASUS\\Desktop\\Blog-project\\blog-app\\node_modules\\eslint-loader\\index.js??ref--14-0!C:\\Users\\ASUS\\Desktop\\Blog-project\\blog-app\\src\\helpers\\authorise-tokens.js","dependencies":[{"path":"C:\\Users\\ASUS\\Desktop\\Blog-project\\blog-app\\src\\helpers\\authorise-tokens.js","mtime":1636271155781},{"path":"C:\\Users\\ASUS\\Desktop\\Blog-project\\blog-app\\babel.config.js","mtime":1636376524822},{"path":"C:\\Users\\ASUS\\Desktop\\Blog-project\\blog-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Desktop\\Blog-project\\blog-app\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\ASUS\\Desktop\\Blog-project\\blog-app\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIkM6L1VzZXJzL0FTVVMvRGVza3RvcC9CbG9nLXByb2plY3QvYmxvZy1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3NsaWNlZFRvQXJyYXkiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLm1hdGNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwoKLyoNCkV4dHJhY3QgYW5kIHZhbGlkYXRlIHRva2VucyBpbiB0aGUgVVJMIGlmIHRoZXkgYXJlIHByZXNlbnQuDQoqLwppbXBvcnQgc3RvcmUgZnJvbSAiLi4vc3RvcmUiOwppbXBvcnQgcm91dGVyIGZyb20gIi4uL3JvdXRlciI7Ci8qKg0KICogUmVhZHMgdGhlIFVSTCBoYXNoIGF0dGVtcHRzIGFuZCB0cmllcyB0byBkZXRlY3QgaWYgdGhlcmUgaXMgY29uZmlybWF0aW9uIHRva2VucyBmcm9tIGVpdGhlciBhbiBlbWFpbCBzaWdudXAgb3INCiAqIGV4dGVybmFsIHByb3ZpZGVyLiBJZiBwcmVzZW50IGl0IHdpbGwgY2FsbCB0aGUgcmVsZXZhbnQgcHJvY2VzcyB0byBhdHRlbXB0IHRvIGF1dGhvcmlzZSB0aGUgdG9rZW4uDQogKi8KCmZ1bmN0aW9uIGRldGVjdFRva2VucygpIHsKICB2YXIgZW1haWxUb2tlbiA9IGRldGVjdEVtYWlsQ29uZmlybWF0aW9uVG9rZW4oKTsKICB2YXIgZXh0ZXJuYWxBY2Nlc3NUb2tlbiA9IGRldGVjdEV4dGVybmFsQWNjZXNzVG9rZW4oKTsKICB2YXIgcmVjb3ZlcnlUb2tlbiA9IGRldGVjdFJlY292ZXJ5VG9rZW4oKTsKCiAgaWYgKGVtYWlsVG9rZW4pIHsKICAgIGNvbnNvbGUubG9nKCJEZXRlY3RlZCBlbWFpbCBjb25maXJtYXRpb24gdG9rZW4iLCBlbWFpbFRva2VuKTsKICAgIGNvbmZpcm1FbWFpbFRva2VuKGVtYWlsVG9rZW4pOwogICAgcmV0dXJuOwogIH0gZWxzZSBpZiAoZXh0ZXJuYWxBY2Nlc3NUb2tlbikgewogICAgY29uc29sZS5sb2coIkRldGVjdGVkIGV4dGVybmFsIGFjY2VzcyB0b2tlbiwgcmVjZWl2ZWQgb2JqZWN0IGZvciBleHRlcm5hbCBsb2dpbiIsIGV4dGVybmFsQWNjZXNzVG9rZW4pOwogICAgY29uZmlybUV4dGVybmFsQWNjZXNzVG9rZW4oZXh0ZXJuYWxBY2Nlc3NUb2tlbik7CiAgICByZXR1cm47CiAgfSBlbHNlIGlmIChyZWNvdmVyeVRva2VuKSB7CiAgICBjb25zb2xlLmxvZygiZm91bmQgcmVjb3ZlcnkgdG9rZW4iLCByZWNvdmVyeVRva2VuKTsKICAgIGNvbmZpcm1SZWNvdmVyeVRva2VuKHJlY292ZXJ5VG9rZW4pOwogICAgcmV0dXJuOwogIH0KCiAgY29uc29sZS5sb2coIk5vIHRva2VucyBkZXRlY3RlZCBpbiBVUkwgaGFzaCIpOwp9Ci8qKg0KICogQ2hlY2tzIFVSTCBoYXNoIGZvciBgY29uZmlybWF0aW9uX3Rva2VuPWAgdGhlbiBleHRyYWN0cyB0aGUgdG9rZW4gd2hpY2ggcHJvY2VlZHMuDQogKi8KCgpmdW5jdGlvbiBkZXRlY3RFbWFpbENvbmZpcm1hdGlvblRva2VuKCkgewogIHRyeSB7CiAgICAvLyBzcGxpdCB0aGUgaGFzaCB3aGVyZSBpdCBkZXRlY3RzIGBjb25maXJtYXRpb25fdG9rZW49YC4gVGhlIHN0cmluZyB3aGljaCBwcm9jZWVkcyBpcyB0aGUgcGFydCB3aGljaCB3ZSB3YW50LgogICAgdmFyIHRva2VuID0gZGVjb2RlVVJJQ29tcG9uZW50KGRvY3VtZW50LmxvY2F0aW9uLmhhc2gpLnNwbGl0KCJjb25maXJtYXRpb25fdG9rZW49IilbMV07CiAgICByZXR1cm4gdG9rZW47CiAgfSBjYXRjaCAoZXJyb3IpIHsKICAgIGNvbnNvbGUuZXJyb3IoIlNvbWV0aGluZyB3ZW50IHdyb25nIHdoZW4gdHJ5aW5nIHRvIGV4dHJhY3QgZW1haWwgY29uZmlybWF0aW9uIGVtYWlsIiwgZXJyb3IpOwogICAgcmV0dXJuIG51bGw7CiAgfQp9Ci8qKg0KICogQ2hlY2tzIFVSTCBoYXNoIGZvciBgYWNjZXNzX3Rva2VuYCB0aGVuIGV4dHJhY3RzLCBjbGVhbnMgYW5kIGNyZWF0ZXMgYSBwYXJhbXMgb2JqZWN0IHdoaWNoIGNvbnRhaW5zIHRoZSBKV1QgYWxvbmcNCiAqIHdpdGggb3RoZXIgbWV0YWRhdGEuDQogKi8KCgpmdW5jdGlvbiBkZXRlY3RFeHRlcm5hbEFjY2Vzc1Rva2VuKCkgewogIHRyeSB7CiAgICB2YXIgZXh0ZXJuYWxUb2tlblJlZ2V4ID0gL2FjY2Vzc190b2tlbj0vOyAvLyBDbGVhbiB0aGUgVVJMCgogICAgdmFyIGhhc2ggPSAoZG9jdW1lbnQubG9jYXRpb24uaGFzaCB8fCAiIikucmVwbGFjZSgvXiNcLz8vLCAiIik7CgogICAgaWYgKGhhc2gubWF0Y2goZXh0ZXJuYWxUb2tlblJlZ2V4KSkgewogICAgICB2YXIgcGFyYW1zID0ge307IC8vY3JlYXRlIHRva2VuIHBhcmFtIGZyb20gdXJsIGhhc2gKCiAgICAgIGhhc2guc3BsaXQoIiYiKS5mb3JFYWNoKGZ1bmN0aW9uIChwYWlyKSB7CiAgICAgICAgLy9lYWNoIHBhaXIgZS5nICd0b2tlbj1mOGZqQ3U5X01YX1Y1RW9jaTJpVjhnJyBuZWVkcyB0byBzcGxpdCBhZ2FpbiBzbyB0aGF0IHdlIGNhbiBjb25zdHJ1Y3Qga2V5IHZhbHVlIHBhaXJzLgogICAgICAgIHZhciBfcGFpciRzcGxpdCA9IHBhaXIuc3BsaXQoIj0iKSwKICAgICAgICAgICAgX3BhaXIkc3BsaXQyID0gX3NsaWNlZFRvQXJyYXkoX3BhaXIkc3BsaXQsIDIpLAogICAgICAgICAgICBrZXkgPSBfcGFpciRzcGxpdDJbMF0sCiAgICAgICAgICAgIHZhbHVlID0gX3BhaXIkc3BsaXQyWzFdOwoKICAgICAgICBwYXJhbXNba2V5XSA9IHZhbHVlOwogICAgICB9KTsKICAgICAgcmV0dXJuIHBhcmFtczsKICAgIH0KICB9IGNhdGNoIChlcnJvcikgewogICAgY29uc29sZS5lcnJvcigiU29tZXRoaW5nIHdlbnQgd3JvbmcgdHJ5aW5nIHRvIGV4dHJhY3QgdGhlIGFjY2VzcyB0b2tlbiIsIGVycm9yKTsKICAgIHJldHVybiBudWxsOwogIH0KfQoKZnVuY3Rpb24gZGV0ZWN0UmVjb3ZlcnlUb2tlbigpIHsKICB0cnkgewogICAgLy8gc3BsaXQgdGhlIGhhc2ggd2hlcmUgaXQgZGV0ZWN0cyBgY29uZmlybWF0aW9uX3Rva2VuPWAuIFRoZSBzdHJpbmcgd2hpY2ggcHJvY2VlZHMgaXMgdGhlIHBhcnQgd2hpY2ggd2Ugd2FudC4KICAgIHZhciB0b2tlbiA9IGRlY29kZVVSSUNvbXBvbmVudChkb2N1bWVudC5sb2NhdGlvbi5oYXNoKS5zcGxpdCgicmVjb3ZlcnlfdG9rZW49IilbMV07CiAgICByZXR1cm4gdG9rZW47CiAgfSBjYXRjaCAoZXJyb3IpIHsKICAgIGNvbnNvbGUuZXJyb3IoIlNvbWV0aGluZyB3ZW50IHdyb25nIHdoZW4gdHJ5aW5nIHRvIGV4dHJhY3QgZW1haWwgY29uZmlybWF0aW9uIGVtYWlsIiwgZXJyb3IpOwogICAgcmV0dXJuIG51bGw7CiAgfQp9Ci8qKg0KICogQHBhcmFtIHtzdHJpbmd9IHRva2VuIC0gYXV0aGVudGljYXRpb24gdG9rZW4gdXNlZCB0byBjb25maXJtIGEgdXNlciB3aG8gaGFzIGNyZWF0ZWQgYW4gYWNjb3VudCB2aWEgZW1haWwgc2lnbnVwLg0KICovCgoKZnVuY3Rpb24gY29uZmlybUVtYWlsVG9rZW4odG9rZW4pIHsKICBzdG9yZS5kaXNwYXRjaCgiYXV0aC9hdHRlbXB0Q29uZmlybWF0aW9uIiwgdG9rZW4pLnRoZW4oZnVuY3Rpb24gKHJlc3ApIHsKICAgIGFsZXJ0KCIiLmNvbmNhdChyZXNwLmVtYWlsLCAiIGhhcyBiZWVuIGNvbmZpcm1lZCwgcGxlYXNlIGxvZ2luIikpOwogIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgYWxlcnQoIkNhbid0IGF1dGhvcmlzZSB5b3VyIGFjY291bnQgcmlnaHQgbm93LiBQbGVhc2UgdHJ5IGFnYWluIik7CiAgICBjb25zb2xlLmVycm9yKGVycm9yLCAiU29tZXRoaW5ncyBnb25lIHdyb25nIGxvZ2dpbmcgaW4iKTsKICB9KTsKfQovKioNCiAqIEBwYXJhbSB7b2JqZWN0fSBleHRlcm5hbEFjY2Vzc1Rva2VuT2JqZWN0IC0gb2JqZWN0IHdoaWNoIGluY2x1ZGVzIHRoZSBKV1QgYWxvbmcgd2l0aCBtZXRhZGF0YSBzdWNoIGFzIHRva2VuIHR5cGUsDQogKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZnJlc2ggdG9rZW4sIGV4cGlyeSB0aW1lLiBvbmx5IHRoIEpXVCB0b2tlbiBpcyB1c2VkIGN1cnJlbnQsIGJ1dCB3ZQ0KICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZW5kIHRoZSB3aG9sZSBvYmplY3Qgb3ZlciBqdXN0IGluIGNhc2UgdGhlIG90aGVyIHBhcnRzIG9mIHRoZSBvYmplY3QNCiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWlnaHQgYmUgdXNlZnVsIGZvciBvdGhlciB0aGluZ3MgbGF0ZXIuDQogKi8KCgpmdW5jdGlvbiBjb25maXJtRXh0ZXJuYWxBY2Nlc3NUb2tlbihleHRlcm5hbEFjY2Vzc1Rva2VuT2JqZWN0KSB7CiAgc3RvcmUuZGlzcGF0Y2goImF1dGgvY29tcGxldGVFeHRlcm5hbExvZ2luIiwgZXh0ZXJuYWxBY2Nlc3NUb2tlbk9iamVjdCkudGhlbihmdW5jdGlvbiAoKSB7CiAgICBhbGVydCgiWW91IGhhdmUgc3VjY2Vzc2Z1bGx5IHNpZ25lZCBpbiB2aWEgZXh0ZXJuYWwgcHJvdmlkZXIiKTsKICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgIGFsZXJ0KCJDYW4ndCBBdXRob3Jpc2UgeW91ciBhY2NvdW50IHJpZ2h0IG5vdywgdHJ5IGFnYWluIik7CiAgICBjb25zb2xlLmVycm9yKGVycm9yLCAiU29tZXRoaW5ncyBnb25lIHdyb25nIGxvZ2dpbmcgaW4iKTsKICB9KTsKfQoKZnVuY3Rpb24gY29uZmlybVJlY292ZXJ5VG9rZW4ocmVjb3ZlcnlUb2tlbikgewogIHN0b3JlLmRpc3BhdGNoKCJhdXRoL2F0dGVtcHRQYXNzd29yZFJlY292ZXJ5IiwgcmVjb3ZlcnlUb2tlbikudGhlbihmdW5jdGlvbiAoKSB7CiAgICByb3V0ZXIucHVzaCgicHJvZmlsZT9zaG93VXBkYXRlVXNlck1vZGFsPXRydWUiKTsKICAgIGFsZXJ0KCJBY2NvdW50IGhhcyBiZWVuIHJlY292ZXJlZC4gVXBkYXRlIHlvdXIgcGFzc3dvcmQgbm93LiIpOwogIH0pLmNhdGNoKGZ1bmN0aW9uICgpIHsKICAgIGFsZXJ0KCJDYW4ndCByZWNvdmVyIHBhc3N3b3JkIik7CiAgfSk7Cn0KCmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uICgpIHsKICBkZXRlY3RUb2tlbnMoKTsKfQ=="},{"version":3,"sources":["C:/Users/ASUS/Desktop/Blog-project/blog-app/src/helpers/authorise-tokens.js"],"names":["store","router","detectTokens","emailToken","detectEmailConfirmationToken","externalAccessToken","detectExternalAccessToken","recoveryToken","detectRecoveryToken","console","log","confirmEmailToken","confirmExternalAccessToken","confirmRecoveryToken","token","decodeURIComponent","document","location","hash","split","error","externalTokenRegex","replace","match","params","forEach","pair","key","value","dispatch","then","resp","alert","email","catch","externalAccessTokenObject","push"],"mappings":"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","sourcesContent":["/*\r\nExtract and validate tokens in the URL if they are present.\r\n*/\r\nimport store from \"../store\";\r\nimport router from \"../router\";\r\n\r\n/**\r\n * Reads the URL hash attempts and tries to detect if there is confirmation tokens from either an email signup or\r\n * external provider. If present it will call the relevant process to attempt to authorise the token.\r\n */\r\nfunction detectTokens() {\r\n  const emailToken = detectEmailConfirmationToken();\r\n  const externalAccessToken = detectExternalAccessToken();\r\n  const recoveryToken = detectRecoveryToken();\r\n\r\n  if (emailToken) {\r\n    console.log(\"Detected email confirmation token\", emailToken);\r\n    confirmEmailToken(emailToken);\r\n    return;\r\n  } else if (externalAccessToken) {\r\n    console.log(\r\n      \"Detected external access token, received object for external login\",\r\n      externalAccessToken\r\n    );\r\n    confirmExternalAccessToken(externalAccessToken);\r\n    return;\r\n  } else if (recoveryToken) {\r\n    console.log(\"found recovery token\", recoveryToken);\r\n    confirmRecoveryToken(recoveryToken);\r\n    return;\r\n  }\r\n\r\n  console.log(\"No tokens detected in URL hash\");\r\n}\r\n\r\n/**\r\n * Checks URL hash for `confirmation_token=` then extracts the token which proceeds.\r\n */\r\nfunction detectEmailConfirmationToken() {\r\n  try {\r\n    // split the hash where it detects `confirmation_token=`. The string which proceeds is the part which we want.\r\n    const token = decodeURIComponent(document.location.hash).split(\r\n      \"confirmation_token=\"\r\n    )[1];\r\n    return token;\r\n  } catch (error) {\r\n    console.error(\r\n      \"Something went wrong when trying to extract email confirmation email\",\r\n      error\r\n    );\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * Checks URL hash for `access_token` then extracts, cleans and creates a params object which contains the JWT along\r\n * with other metadata.\r\n */\r\nfunction detectExternalAccessToken() {\r\n  try {\r\n    const externalTokenRegex = /access_token=/;\r\n    // Clean the URL\r\n    const hash = (document.location.hash || \"\").replace(/^#\\/?/, \"\");\r\n\r\n    if (hash.match(externalTokenRegex)) {\r\n      const params = {};\r\n      //create token param from url hash\r\n      hash.split(\"&\").forEach(pair => {\r\n        //each pair e.g 'token=f8fjCu9_MX_V5Eoci2iV8g' needs to split again so that we can construct key value pairs.\r\n        const [key, value] = pair.split(\"=\");\r\n        params[key] = value;\r\n      });\r\n      return params;\r\n    }\r\n  } catch (error) {\r\n    console.error(\r\n      \"Something went wrong trying to extract the access token\",\r\n      error\r\n    );\r\n    return null;\r\n  }\r\n}\r\n\r\nfunction detectRecoveryToken() {\r\n  try {\r\n    // split the hash where it detects `confirmation_token=`. The string which proceeds is the part which we want.\r\n    const token = decodeURIComponent(document.location.hash).split(\r\n      \"recovery_token=\"\r\n    )[1];\r\n    return token;\r\n  } catch (error) {\r\n    console.error(\r\n      \"Something went wrong when trying to extract email confirmation email\",\r\n      error\r\n    );\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * @param {string} token - authentication token used to confirm a user who has created an account via email signup.\r\n */\r\nfunction confirmEmailToken(token) {\r\n  store\r\n    .dispatch(\"auth/attemptConfirmation\", token)\r\n    .then(resp => {\r\n      alert(`${resp.email} has been confirmed, please login`);\r\n    })\r\n    .catch(error => {\r\n      alert(`Can't authorise your account right now. Please try again`);\r\n      console.error(error, \"Somethings gone wrong logging in\");\r\n    });\r\n}\r\n\r\n/**\r\n * @param {object} externalAccessTokenObject - object which includes the JWT along with metadata such as token type,\r\n *                                             refresh token, expiry time. only th JWT token is used current, but we\r\n *                                             send the whole object over just in case the other parts of the object\r\n *                                             might be useful for other things later.\r\n */\r\nfunction confirmExternalAccessToken(externalAccessTokenObject) {\r\n  store\r\n    .dispatch(\"auth/completeExternalLogin\", externalAccessTokenObject)\r\n    .then(() => {\r\n      alert(\"You have successfully signed in via external provider\");\r\n    })\r\n    .catch(error => {\r\n      alert(`Can't Authorise your account right now, try again`);\r\n      console.error(error, \"Somethings gone wrong logging in\");\r\n    });\r\n}\r\n\r\nfunction confirmRecoveryToken(recoveryToken) {\r\n  store\r\n    .dispatch(\"auth/attemptPasswordRecovery\", recoveryToken)\r\n    .then(() => {\r\n      router.push(\"profile?showUpdateUserModal=true\");\r\n      alert(\"Account has been recovered. Update your password now.\");\r\n    })\r\n    .catch(() => {\r\n      alert(`Can't recover password`);\r\n    });\r\n}\r\n\r\nexport default function() {\r\n  detectTokens();\r\n}\r\n"]}]}